name: Debug PyPI Publication

on:
  push:
    branches: [ main ]

jobs:
  debug:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Create and activate virtual environment
      run: |
        uv venv
        echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv pip install -e .
        uv pip install build twine python-semantic-release

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Debug - Show current directory structure
      run: |
        echo "=== Current directory structure ==="
        ls -la
        echo "=== pyproject.toml content ==="
        cat pyproject.toml
        echo "=== Git status ==="
        git status
        echo "=== Git log (last 5 commits) ==="
        git log --oneline -5

    - name: Debug - Test semantic-release dry-run
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "=== Testing semantic-release dry-run ==="
        semantic-release --dry-run --verbosity DEBUG

    - name: Debug - Show semantic-release version and config
      run: |
        echo "=== Semantic-release version ==="
        semantic-release --version
        echo "=== Python version ==="
        python --version
        echo "=== Installed packages ==="
        pip list | grep -E "(semantic|release|build|twine)"

    - name: Try manual build
      run: |
        echo "=== Manual build test ==="
        python -m build
        echo "=== Build artifacts ==="
        ls -la dist/

    - name: Try semantic-release with minimal config
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "=== Attempting semantic-release with minimal config ==="
        # 最小限の設定でテスト
        semantic-release version --verbosity DEBUG || echo "Version command failed with exit code $?"
